{"version":3,"file":"component---src-layouts-posts-js-62daf4664de2cf91d96e.js","mappings":"8JAiBA,MAde,IACb,uBAAKA,MAAO,CAACC,UAAW,OAAQC,aAAc,SAC5C,uBAAKF,MAAO,CAAEG,UAAW,SACvB,2BACE,qBAAGC,KAAK,IAAIC,MAAM,iBAAiBL,MAAO,CAACC,UAAW,QAAO,UAC7D,qBAAGG,KAAK,SAASC,MAAM,iBAAiBL,MAAO,CAACM,WAAY,MAAOL,UAAW,QAAO,UACrF,qBAAGG,KAAK,aAAaC,MAAM,iBAAiBL,MAAO,CAACM,WAAY,MAAOL,UAAW,QAAO,cACzF,qBAAGG,KAAK,sCAAsCC,MAAM,iBAAiBL,MAAO,CAACM,WAAY,MAAOL,UAAW,QAAO,eCyB1H,MAtBe,IAAmB,IAAlB,SAAEM,GAAU,EAC1B,OACE,gCACE,uBACEP,MAAO,CACLQ,OAAO,SACPC,SAAS,sBACTC,QAAQ,qBACRP,UAAW,WAGb,gBAAC,EAAM,MACP,4BAAOI,IAER,C,sDCsBL,UA7Ce,IAAa,IAAZ,KAACI,GAAK,EACpB,MAAM,eAACC,GAAkBD,EACnBE,EAAOD,EAAeC,KACtBC,EAAOF,EAAeG,YAAYD,KAClCE,EAAQJ,EAAeG,YAAYC,MAEzC,OACE,gBAAC,IAAM,KACL,uBAAKC,UAAU,aACjB,uBAAKA,UAAU,WACb,uBAAKA,UAAU,uBAAqB,KAClC,uBAAKA,UAAU,0BAEb,uBAAKZ,MAAM,MAAML,MAAO,CAAC,eAAkB,kBACzC,uBAAKK,MAAM,OAAOL,MAAO,CAAC,MAAS,SACjC,sBAAIK,MAAM,SAASW,IAErB,uBAAKX,MAAM,aACT,sBAAIL,MAAO,CAAC,aAAc,WAAac,KAG3C,uBAAKG,UAAU,aACZ,uBAAKjB,MAAO,CAACC,UAAW,OAAQE,UAAW,QAASe,wBAAyB,CAACC,OAAQN,OAG7F,uBAAKI,UAAU,0BAGR,C","sources":["webpack://prerits-site/./src/components/Header.js","webpack://prerits-site/./src/components/layout.js","webpack://prerits-site/./src/layouts/posts.js"],"sourcesContent":["import * as React from \"react\"\nimport '../styles/layout.css'\n\nconst Header = () => (\n  <div style={{marginTop: \"1rem\", marginBottom: \"2rem\"}}>\n    <div style={{ textAlign: \"left\"}}>\n      <nav>\n        <a href=\"/\" class=\"button is-link\" style={{marginTop: \"1em\"}}> Home </a>\n        <a href=\"/posts\" class=\"button is-link\" style={{marginLeft: \"1em\", marginTop: \"1em\"}}> Posts</a>\n        <a href=\"/bookshelf\" class=\"button is-link\" style={{marginLeft: \"1em\", marginTop: \"1em\"}}> Bookshelf</a>\n        <a href=\"https://twitter.com/ThePreritOberai\" class=\"button is-link\" style={{marginLeft: \"1em\", marginTop: \"1em\"}}> Twitter</a>\n        {/* <a href=\"/projects\" class=\"button is-link\" style={{marginLeft: \"1em\", marginTop: \"1em\"}}>Projects</a> */}\n      </nav>\n    </div>\n  </div>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"./Header\"\nimport \"../styles/layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n          textAlign: 'center'\n        }}\n      >\n        <Header/>\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from \"../components/layout\"\n\nconst PostPage = ({data}) => {\n    const {markdownRemark} = data\n    const html = markdownRemark.html\n    const date = markdownRemark.frontmatter.date\n    const title = markdownRemark.frontmatter.title\n    \n    return (\n      <Layout>\n        <div className=\"container\">\n      <div className=\"columns\">\n        <div className=\"column is-one-sixth\"> </div>\n          <div className=\"column is-three-fifths\"> \n            \n            <div class=\"box\" style={{\"justifyContent\": \"space-between\"}}>\n              <div class=\"left\" style={{\"float\": \"left\"}}>\n                <h1 class=\"title\">{title}</h1>\n              </div>\n              <div class=\"date-post\">\n                <h6 style={{\"font-style\": \"normal\" }}>{date}</h6>\n              </div>\n            </div>\n            <div className=\"generated\">\n               <div style={{marginTop: \"1rem\", textAlign: \"left\"}} dangerouslySetInnerHTML={{__html: html}}/>\n            </div>\n          </div>\n        <div className=\"column is-one-sixth\"></div>\n      </div>\n    </div>\n      </Layout>\n    )\n  }\n  \n  export const query = graphql`\n    query($pathSlug: String!) {\n      markdownRemark(frontmatter: { path: {eq: $pathSlug }}) {\n        rawMarkdownBody\n        html\n        frontmatter {\n          title\n          date\n        }\n      }\n    }\n  `\n  \n  export default PostPage;"],"names":["style","marginTop","marginBottom","textAlign","href","class","marginLeft","children","margin","maxWidth","padding","data","markdownRemark","html","date","frontmatter","title","className","dangerouslySetInnerHTML","__html"],"sourceRoot":""}
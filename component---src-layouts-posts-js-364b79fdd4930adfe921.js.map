{"version":3,"sources":["webpack:///./src/layouts/posts.js"],"names":["require","query","Layout","markdownRemark","data","html","date","frontmatter","title","charSet","className","style","padding","marginTop","dangerouslySetInnerHTML","__html","marginBottom"],"mappings":"2FAAA,8FAKAA,EAAQ,QAER,IAiCeC,EAAK,aAaHC,UA9CF,SAAC,GAAY,IACjBC,EADgB,EAAVC,KACND,eACDE,EAAOF,EAAeE,KACtBC,EAAOH,EAAeI,YAAYD,KAClCE,EAAQL,EAAeI,YAAYC,MAEzC,OAEE,iCACE,kBAAC,IAAD,KACE,0BAAMC,QAAQ,UACd,+BAAQD,IAEV,kBAAC,IAAD,MAEA,yBAAKE,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACf,yBAAKA,UAAU,iBAAiBC,MAAO,CAACC,QAAS,SAC/C,6BACA,yBAAKF,UAAU,aACb,yBAAKC,MAAO,CAACE,UAAW,QAASC,wBAAyB,CAACC,OAAQV,MAErE,wBAAIM,MAAO,CAACE,UAAW,YACvB,uBAAGH,UAAU,YAAYC,MAAO,CAACK,aAAc,WAA/C,iBAAyEV,IAE3E,yBAAKI,UAAU,gB","file":"component---src-layouts-posts-js-364b79fdd4930adfe921.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from \"react-helmet\";\nimport Header from '../components/Header';\n\nrequire(`katex/dist/katex.min.css`)\n\nconst Layout = ({data}) => {\n    const {markdownRemark} = data\n    const html = markdownRemark.html\n    const date = markdownRemark.frontmatter.date\n    const title = markdownRemark.frontmatter.title\n    \n    return (\n\n      <section>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>{title}</title>\n        </Helmet>\n        <Header />\n  \n        <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\" />\n            <div className=\"column is-half\" style={{padding: \"2rem\"}}>\n              <br />\n              <div className=\"generated\">\n                <div style={{marginTop: \"1rem\"}} dangerouslySetInnerHTML={{__html: html}}/>\n              </div>\n              <hr style={{marginTop: \"2.5rem\"}}/>\n              <p className=\"is-size-7\" style={{marginBottom: \"0.5rem\"}}>Last Updated: {date}</p>\n            </div>\n            <div className=\"column\" />\n          </div>\n        </div>\n      </section>\n    )\n  }\n  \n  export const query = graphql`\n    query($pathSlug: String!) {\n      markdownRemark(frontmatter: { path: {eq: $pathSlug }}) {\n        rawMarkdownBody\n        html\n        frontmatter {\n          title\n          date\n        }\n      }\n    }\n  `\n  \n  export default Layout;"],"sourceRoot":""}